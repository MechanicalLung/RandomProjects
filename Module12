#include <iostream>
#include <cctype>
#include <cstring>

using namespace std;

const char part1[] = "Dear ";
const char part2[] = "Our records show that your account has a"
                     " balance of $";
const char part3[] = " and a past due ammount of $";
const char part4[] = "Your last payment was on ";
const char part5[] = "Please pay the past-due amount as soon as possible.\n\n";
const char part6[] = "Please ignore this letter if you have already sent payment.\n";
const char part7[] = "Sincerely,\n\n";
const char part8[] = "Blue Star Electric";                     

void printLine(const char *, int&);
void getInfo(char *, char *, char *, char *, char *);
void printLetter(char *, char *, char *, char *, char *);


int main()
{


//constant ints for the character arrays to hold the values. 
const int NSIZE = 15,
          PDATE = 14,
          BSIZE = 8;



char firstName[NSIZE],
     lastName[NSIZE],
     lastPayment[PDATE],
     balance[BSIZE],
     pastDue[BSIZE],
     again;                          //Holds the answer for Y or N


do
{
    getInfo(firstName, lastName, lastPayment, balance, pastDue);

printLetter(firstName, lastName, lastPayment, balance, pastDue);


cout << "\nWould you like to print another letter? Press Y or N: ";
cin >> again;
while(toupper(again) != 'Y' && toupper(again) != 'N')
{
    cout << "\nPlease enter in Y or N.\n";
    cin >> again;
}



} while(toupper(again) == 'Y');



return 0;




}

//This function is to get the information regarding the customer.


void getInfo(char *fname, char *lname, char *lPay, char *bLance, char *pDoo)
{

cout << "What is the customer's first name? Enter in here: ";
cin >> fname;
fname[0] = toupper(fname[0]);
cout << "\nWhat is the customer's last name? Enter in here: ";
cin >> lname;
lname[0] = toupper(lname[0]);
cout << "\nWhen was the customer's last payment? Enter in date here (MM/DD/YYYY): ";
cin >> lPay;
cout << "\nWhat is the customer's balance? Enter in here: ";
cin >> bLance;
cout << "\nWhat is the past due amount? Enter in  here: ";
cin >> pDoo;
cout << "\n";

}

//Function printLetter, this function will call the printLine function for formatting, and wrapping.
//It will also print the characters.


void printLetter(char fname[], char lname[], char lPay[], char bLance[], char pDoo[])
{

   int position;

   position = 0;                       //to signal a start of a new line, position is set to 0.
    printLine(part1, position);
    cout << fname << " " << lname << ":\n\n";

    position = 0;                      //again starting a new line.
    printLine(part2, position);
    cout << bLance; 

    position += strlen(bLance);
    printLine(part3, position);
    cout << pDoo << ". ";
    position += strlen(pDoo) + 2;      //+ 2 is to take in account for the period and the space

    printLine(part4, position);
    cout << lPay << ". "; 

    position += strlen(lPay) + 2;
    printLine(part5, position);

    position = 0;                       //ALMOST THERE, REMEMBER TO SET POSITION TO 0 FOR NEW LINES
    printLine(part6, position);
    
    position = 0;
    printLine(part7, position);

    position = 0;
    printLine(part8, position);
    cout << "\n\n";                 //just to make it look a little nicer if you decide to start a new one.

}

//This printLine function is important for the formatting, and also performs a soft word wrap.


void printLine(const char *line, int &sCount)         //*line is a pointer to position
{


const int LEFTM = 10,
          RIGHTM = 70,
          WORDWRAP = 60;

          int cCount = 0;

          if(sCount >= RIGHTM)
          {
            cout << "\n";
            sCount = 0;
          }

          while(line[cCount] != '\0')
          {

            if (sCount >= WORDWRAP && line[cCount] == ' ')
            {
                cout << " \n";
                cCount++;
                sCount = 0;
            }
            if (sCount == 0)
            {
                cout << " ";
                sCount = LEFTM;
            }
                cout.put(line[cCount]);
                cCount++;
                sCount++;

          }


}
